{"version":3,"sources":["index.js"],"names":["FormComponent","props","hasBeenValidated","getValidatorData","bind","getValidationState","renderHelpText","handleChange","handleCheckboxChange","handleFocus","handleBlur","isValid","handleValidationReset","name","state","getValidationMessages","length","options","trim","toUpperCase","e","value","target","replace","setState","key","checked","handleValidation"],"mappings":"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","file":"index.js","sourceRoot":"/Users/danieljansson/Feelgood/src/components/FormComponent","sourcesContent":["import React, { Component } from 'react';\n\nclass FormComponent extends Component {\n    constructor (props) {\n        super(props);\n\n        this.hasBeenValidated = {};\n\n        this.getValidatorData = this.getValidatorData.bind(this);\n        this.getValidationState = this.getValidationState.bind(this);\n        this.renderHelpText = this.renderHelpText.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.isValid = this.isValid.bind(this);\n        this.handleValidationReset = this.handleValidationReset.bind(this);\n    }\n\n    getValidationState (name) {\n        if (!this.props.isValid(name)) return 'error';\n        if (name in this.hasBeenValidated) return 'success';\n    }\n\n    getValidatorData () {\n        return this.state;\n    }\n\n    renderHelpText (name) {\n        return (\n            <span>{this.props.getValidationMessages(name)}</span>\n        );\n    }\n\n    isValid () {\n        return this.props.getValidationMessages().length === 0;\n    }\n\n    handleChange (name, options = { trim: false, toUpperCase: false }) {\n        return (e) => {\n            let value = e.target.value;\n\n            if (options.trim) {\n                value = value.trim();\n                value = value.replace(/\\s/g, '');\n            }\n\n            if (options.toUpperCase) {\n                value = value.toUpperCase();\n            }\n\n            this.setState({ [name]: value });\n        };\n    }\n\n    handleSelect (name) {\n        return (key, e) => {\n            this.setState({ [name]: key });\n        };\n    }\n\n    handleCheckboxChange (name) {\n        return (e) => {\n            this.setState({ [name]: e.target.checked });\n        };\n    }\n\n    handleFocus (name) {\n        return (e) => {\n            if (name in this.hasBeenValidated) {\n                delete this.hasBeenValidated[name];\n            }\n        };\n    }\n\n    handleBlur (name, options) {\n        return (e) => {\n            var value = e.target.value;\n\n            if (options && options.trim) {\n                value = e.target.value.trim();\n                value = value.replace(/\\s/g, '');\n            }\n\n            this.setState(\n                {\n                    [name]: value\n                },\n                () => {\n                    this.props.handleValidation(name)();\n                    this.hasBeenValidated[name] = true;\n                }\n            );\n        };\n    }\n\n    handleValidationReset () {\n        this.hasBeenValidated = {};\n    }\n}\n\nexport default FormComponent;"]}
/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","./Types","./Compare","../extends"],e)}(function(e,t){"use strict";function r(e,t){if(!i.areEqual(e,t)){var r=new u(e);if(!r.contains(t))return!0}return!1}var n=e("./Types"),i=e("./Compare"),s=e("../extends"),o=s["default"],u=function(e){function t(t){var r=this;e.call(this,t,function(){return r._value=t})}return o(t,e),t.prototype.contains=function(e){var t=this._value;if(t===e)return!0;switch(e){case Function:return this.isFunction;case Object:return this.isObject;case Array:return this.isArray;case String:return this.isString;case Number:return this.isNumber;case Boolean:return this.isBoolean}if(this.type!=typeof e||this.isPrimitive&&!i.areEqual(t,e))return!1;if(this.isArray&&Array.isArray(e)){for(var n=Math.min(e.length,t.length),s=0;n>s;s++)if(r(t[s],e[s]))return!1;return!0}if(this.isObject){var o=Object.keys(t),u=Object.keys(e);if(u.length>o.length)return!1;for(var a=0,f=u;a<f.length;a++){var c=f[a];if(-1==o.indexOf(c))return!1}for(var p=0,h=u;p<h.length;p++){var c=h[p];if(r(t[c],e[c]))return!1}}return!0},t}(n.TypeInfo);t.TypeInfoHelper=u;var a=function(){function e(e){this._typeDescriptor=e,Object.freeze(this)}return e.prototype.isSubsetOf=function(e){var t=new u(e);return t.contains(this._typeDescriptor)},e}();t.TypeValidator=a,Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=a});
//# sourceMappingURL=TypeValidator.js.map
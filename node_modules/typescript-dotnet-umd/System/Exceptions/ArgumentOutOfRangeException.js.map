{"version":3,"sources":["System/Exceptions/ArgumentOutOfRangeException.js","System/Exceptions/ArgumentOutOfRangeException.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","ArgumentException_1","extends_1","__extends","NAME","ArgumentOutOfRangeException","_super","paramName","actualValue","message","innerException","call","this","_","prototype","getName","ArgumentException","Object","defineProperty","value"],"mappings":";;;;;CAKA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,sBAAuB,iBAAkBN,IAE5E,SAAUI,EAASF,GAClB,YCLJ,IAAAM,GAAAJ,EAAgC,uBAChCK,EAAAL,EAA4B,iBACtBM,EAAYD,EAAAA,WAEZE,EAAc,8BAEpBC,EAAA,SAAAC,GAIC,QAAAD,GACCE,EACAC,EACAC,EACAC,GADA,SAAAD,IAAAA,EAAA,KACA,SAAAC,IAAAA,EAAA,MAEAJ,EAAAK,KAAAC,KAAML,IAAa,IAAIC,EAAW,MAAOC,EAAUC,EAAgB,SAACG,GACnEA,EAAEL,YAAcA,IAUnB,MArBiDL,GAAAE,EAAAC,GAgBtCD,EAAAS,UAAAC,QAAV,WAEC,MAAOX,IAGTC,GArBiDJ,EAAAe,kBAApCrB,GAAAU,4BAA2BA,EAuBxCY,OAAAC,eAAAvB,EAAA,cAAAwB,OAAA,IDHIxB,EAAAA,WCGWU","file":"System/Exceptions/ArgumentOutOfRangeException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"./ArgumentException\", \"../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ArgumentException_1 = require(\"./ArgumentException\");\n    var extends_1 = require(\"../../extends\");\n    var __extends = extends_1.default;\n    var NAME = 'ArgumentOutOfRangeException';\n    var ArgumentOutOfRangeException = (function (_super) {\n        __extends(ArgumentOutOfRangeException, _super);\n        function ArgumentOutOfRangeException(paramName, actualValue, message, innerException) {\n            if (message === void 0) { message = ' '; }\n            if (innerException === void 0) { innerException = null; }\n            _super.call(this, paramName, +(\"(\" + actualValue + \") \") + message, innerException, function (_) {\n                _.actualValue = actualValue;\n            });\n        }\n        ArgumentOutOfRangeException.prototype.getName = function () {\n            return NAME;\n        };\n        return ArgumentOutOfRangeException;\n    }(ArgumentException_1.ArgumentException));\n    exports.ArgumentOutOfRangeException = ArgumentOutOfRangeException;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ArgumentOutOfRangeException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n\r\nimport {Exception} from \"../Exception\";\r\nimport {ArgumentException} from \"./ArgumentException\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nconst NAME:string = 'ArgumentOutOfRangeException';\r\n\r\nexport class ArgumentOutOfRangeException extends ArgumentException\r\n{\r\n\tactualValue:string|number|boolean;\r\n\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tactualValue:string|number|boolean,\r\n\t\tmessage:string = ' ',\r\n\t\tinnerException:Exception = null)\r\n\t{\r\n\t\tsuper(paramName, + `(${actualValue}) ` + message , innerException, (_)=>{\r\n\t\t\t_.actualValue = actualValue;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default ArgumentOutOfRangeException;"]}
{"version":3,"sources":["System/Exceptions/InvalidOperationException.js","System/Exceptions/InvalidOperationException.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","SystemException_1","extends_1","__extends","NAME","InvalidOperationException","_super","apply","this","arguments","prototype","getName","SystemException","Object","defineProperty","value"],"mappings":";;;;;CAKA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,oBAAqB,iBAAkBN,IAE1E,SAAUI,EAASF,GAClB,YCPJ,IAAAM,GAAAJ,EAA8B,qBAC9BK,EAAAL,EAA4B,iBACtBM,EAAYD,EAAAA,WAEZE,EAAc,4BAEpBC,EAAA,SAAAC,GAAA,QAAAD,KAA+CC,EAAAC,MAAAC,KAAAC,WAQ/C,MAR+CN,GAAAE,EAAAC,GAGpCD,EAAAK,UAAAC,QAAV,WAEC,MAAOP,IAGTC,GAR+CJ,EAAAW,gBAAlCjB,GAAAU,0BAAyBA,EAUtCQ,OAAAC,eAAAnB,EAAA,cAAAoB,OAAA,IDQIpB,EAAAA,WCRWU","file":"System/Exceptions/InvalidOperationException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"./SystemException\", \"../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var SystemException_1 = require(\"./SystemException\");\n    var extends_1 = require(\"../../extends\");\n    var __extends = extends_1.default;\n    var NAME = 'InvalidOperationException';\n    var InvalidOperationException = (function (_super) {\n        __extends(InvalidOperationException, _super);\n        function InvalidOperationException() {\n            _super.apply(this, arguments);\n        }\n        InvalidOperationException.prototype.getName = function () {\n            return NAME;\n        };\n        return InvalidOperationException;\n    }(SystemException_1.SystemException));\n    exports.InvalidOperationException = InvalidOperationException;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = InvalidOperationException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {SystemException} from \"./SystemException\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nconst NAME:string = 'InvalidOperationException';\r\n\r\nexport class InvalidOperationException extends SystemException\r\n{\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default InvalidOperationException;\r\n"]}
/*!
 * @author electricessence / https://github.com/electricessence/
 * Originally based upon .NET source but with many additions and improvements.
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var i=e(require,exports);void 0!==i&&(module.exports=i)}else"function"==typeof define&&define.amd&&define(["require","exports","../Types","./TimeUnit","./ClockTime","./TimeQuantity","../../extends"],e)}(function(e,i){"use strict";var t=e("../Types"),n=e("./TimeUnit"),o=e("./ClockTime"),r=e("./TimeQuantity"),u=e("../../extends"),s=u["default"],l=function(e){function i(i,t){void 0===t&&(t=n.TimeUnit.Milliseconds);var o=n.TimeUnit.toMilliseconds(i,t);e.call(this,o);var r=this;r.ticks=1e4*o,r.milliseconds=o,r.seconds=o/1e3,r.minutes=o/6e4,r.hours=o/36e5,r.days=o/864e5}return s(i,e),Object.defineProperty(i.prototype,"total",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"time",{get:function(){var e=this,i=e._time;return i||(e._time=i=new o.ClockTime(e.getTotalMilliseconds())),i},enumerable:!0,configurable:!0}),i.prototype.add=function(e){if(t.Type.isNumber(e))throw new Error("Use .addUnit(value:number,units:TimeUnit) to add a numerical value amount.  Default units are milliseconds.\n.add only supports quantifiable time values (ITimeTotal).");return new i(this.getTotalMilliseconds()+e.total.milliseconds)},i.prototype.addUnit=function(e,t){return void 0===t&&(t=n.TimeUnit.Milliseconds),new i(this.getTotalMilliseconds()+n.TimeUnit.toMilliseconds(e,t))},i.from=function(e,t){return new i(e,t)},i.fromDays=function(e){return new i(e,n.TimeUnit.Days)},i.fromHours=function(e){return new i(e,n.TimeUnit.Hours)},i.fromMinutes=function(e){return new i(e,n.TimeUnit.Minutes)},i.fromSeconds=function(e){return new i(e,n.TimeUnit.Seconds)},i.fromMilliseconds=function(e){return new i(e,n.TimeUnit.Milliseconds)},i.fromTicks=function(e){return new i(e,n.TimeUnit.Ticks)},Object.defineProperty(i,"zero",{get:function(){return c||(c=new i(0))},enumerable:!0,configurable:!0}),i}(r.TimeQuantity);i.TimeSpan=l;var c;Object.defineProperty(i,"__esModule",{value:!0}),i["default"]=l});
//# sourceMappingURL=TimeSpan.js.map
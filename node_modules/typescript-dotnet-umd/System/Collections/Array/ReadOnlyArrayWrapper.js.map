{"version":3,"sources":["System/Collections/Array/ReadOnlyArrayWrapper.js","System/Collections/Array/ReadOnlyArrayWrapper.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","ArgumentNullException_1","ReadOnlyCollectionBase_1","Enumerator_1","extends_1","__extends","ReadOnlyArrayWrapper","_super","array","call","this","ArgumentNullException","_","_getCount","length","getEnumerator","from","getValueAt","i","ReadOnlyCollectionBase","Object","defineProperty","value"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,yCAA0C,4BAA6B,4BAA6B,oBAAqBN,IAE5J,SAAUI,EAASF,GAClB,YCPJ,IAAAM,GAAAJ,EAAoC,0CACpCK,EAAAL,EAAqC,6BAErCM,EAAAN,EAAqC,6BACrCO,EAAAP,EAA4B,oBACtBQ,EAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAGC,QAAAD,GAAYE,GAGX,GADAD,EAAAE,KAAAC,OACIF,EACH,KAAM,IAAIP,GAAAU,sBAAsB,QAEjC,IAAMC,GAAIF,IACVE,GAAEC,UAAY,WAAM,MAAAL,GAAMM,QAC1BF,EAAEG,cAAgB,WAAM,MAAAZ,GAAAa,KAAeR,IACvCI,EAAEK,WAAa,SAAAC,GAAK,MAAAV,GAAMU,IAI5B,MAhBqDb,GAAAC,EAAAC,GAgBrDD,GAhBqDJ,EAAAiB,uBAArDC,QAAAC,eAAA1B,EAAA,cAAA2B,OAAA,IDoBI3B,EAAAA,WAAkBW","file":"System/Collections/Array/ReadOnlyArrayWrapper.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"../../Exceptions/ArgumentNullException\", \"../ReadOnlyCollectionBase\", \"../Enumeration/Enumerator\", \"../../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ArgumentNullException_1 = require(\"../../Exceptions/ArgumentNullException\");\n    var ReadOnlyCollectionBase_1 = require(\"../ReadOnlyCollectionBase\");\n    var Enumerator_1 = require(\"../Enumeration/Enumerator\");\n    var extends_1 = require(\"../../../extends\");\n    var __extends = extends_1.default;\n    var ReadOnlyArrayWrapper = (function (_super) {\n        __extends(ReadOnlyArrayWrapper, _super);\n        function ReadOnlyArrayWrapper(array) {\n            _super.call(this);\n            if (!array)\n                throw new ArgumentNullException_1.ArgumentNullException('array');\n            var _ = this;\n            _._getCount = function () { return array.length; };\n            _.getEnumerator = function () { return Enumerator_1.from(array); };\n            _.getValueAt = function (i) { return array[i]; };\n        }\n        return ReadOnlyArrayWrapper;\n    }(ReadOnlyCollectionBase_1.ReadOnlyCollectionBase));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ReadOnlyArrayWrapper;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {ArgumentNullException} from \"../../Exceptions/ArgumentNullException\";\r\nimport {ReadOnlyCollectionBase} from \"../ReadOnlyCollectionBase\";\r\nimport {IArray} from \"./IArray\";\r\nimport {from as enumeratorFrom} from \"../Enumeration/Enumerator\";\r\nimport __extendsImport from \"../../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nexport default class ReadOnlyArrayWrapper<T> extends ReadOnlyCollectionBase<T>\r\n{\r\n\r\n\tconstructor(array:IArray<T>)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(!array)\r\n\t\t\tthrow new ArgumentNullException('array');\r\n\r\n\t\tconst _ = this;\r\n\t\t_._getCount = () => array.length;\r\n\t\t_.getEnumerator = () => enumeratorFrom(array);\r\n\t\t_.getValueAt = i => array[i];\r\n\t}\r\n\r\n\tgetValueAt:(index:number)=>T;\r\n}\r\n"]}